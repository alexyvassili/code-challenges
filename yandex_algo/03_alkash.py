"""                          Игра в пьяницу
    В игре в пьяницу карточная колода раздается поровну двум игрокам.
    Далее они вскрывают по одной верхней карте, и тот, чья карта старше,
    забирает себе обе вскрытые карты, которые кладутся под низ его колоды.
    Тот, кто остается без карт - проигрывает.
    Для простоты будем считать, что все карты различны по номиналу, а также,
    что самая младшая карта побеждает самую старшую карту
    ("шестерка берет туза").
    Игрок, который забирает себе карты, сначала кладет под низ своей колоды
    карту первого игрока, затем карту второго игрока (то есть карта второго
    игрока оказывается внизу колоды).
    Напишите программу, которая моделирует игру в пьяницу и определяет, кто
    выигрывает. В игре участвует 10 карт, имеющих значения от 0 до 9, большая
    карта побеждает меньшую, карта со значением 0 побеждает карту 9.
    Входные данные.
    Программа получает на вход две строки: первая строка содержит 5 чисел,
    разделенных пробелами - номера карт первого игрока, вторая - аналогично
    пять карт второго игрока. Карты перечислены сверху вниз, то есть
    каждая строка начинается с той карты, которая будет открыта первой.
    Выходные данные
    Программа должна определить, кто выигрывает при данной раздаче, и вывести
    слово first или second, после чего вывести количество ходов, сделанных до
    выигрыша. Если на протяжении 10^6 ходов игра не заканчивается, программа
    должна вывести слово botva.
"""
from collections import deque


def is_card_greater(card1, card2):
    if abs(card1 - card2) == 9:
        return not (card1 > card2)
    return card1 > card2


def load_cards():
    cards1 = list(map(int, input().split()))
    cards2 = list(map(int, input().split()))
    return cards1, cards2


def game():
    cards1, cards2 = load_cards()
    deq1 = deque(cards1)
    deq2 = deque(cards2)
    count = 0
    while count < 1000000:
        print(deq1)
        print(deq2)
        print()
        count += 1
        card1 = deq1.popleft()
        card2 = deq2.popleft()
        if is_card_greater(card1, card2):
            deq1.append(card1)
            deq1.append(card2)
        else:
            deq2.append(card1)
            deq2.append(card2)
        if not deq1:
            return f"second {count}"
        if not deq2:
            return f"first {count}"
    return "botva"


# 1 3 5 7 9
# 2 4 6 8 0
# Return: "second 5"
result = game()
print(result)
